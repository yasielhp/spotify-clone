---
import MusicsTable from '@/components/MusicsTable.astro'
import Layout from '@/layouts/Layout.astro'
import { CardPlayButton } from '@/components/CardPlayButton.jsx'
import { allPlaylists, songs } from '@/lib/data'

const { id } = Astro.params

const playlist = allPlaylists.find((playlist) => playlist.id === id)
const playListSongs = songs.filter((song) => song.albumId === playlist?.albumId)
---

<Layout title={playlist?.title ? playlist?.title : 'Spotify CLone'}>
	<div
		id="playlist-container"
		transition:name=`box-${id}`
		class="relative flex h-full flex-col overflow-x-hidden bg-zinc-900"
	>
		<!-- <PageHeader /> -->

		<header class="mt-12 flex flex-row gap-8 px-6">
			<picture class="aspect-square h-52 w-52 flex-none">
				<img
					src={playlist?.cover}
					transition:name=`image-${playlist?.id}`
					alt={`Cover of ${playlist?.title}`}
					class="h-full w-full object-cover shadow-lg"
				/>
			</picture>

			<div class="flex flex-col justify-between">
				<h2 class="flex flex-1 items-end">Playlist</h2>
				<div>
					<h1 class="block text-5xl font-bold text-white">
						{playlist?.title}
						<span transition:name=`title-${playlist?.id}`></span>
					</h1>
				</div>

				<div class="flex flex-1 items-end">
					<div class="text-sm font-normal text-gray-300">
						<div transition:name=`artists-${playlist?.id}`>
							<span>{playlist?.artists.join(', ')}</span>
						</div>
						<p class="mt-1">
							<span class="text-white">{playListSongs.length} canciones</span>, 3 h aproximadamente
						</p>
					</div>
				</div>
			</div>
		</header>

		<div class="pl-6 pt-6">
			<CardPlayButton client:load id={id} transition:persist size="large" />
		</div>

		<div class="relative z-10 px-6 pt-10"></div>

		<div class="absolute inset-0 -z-[1] bg-gradient-to-t from-zinc-900 via-zinc-900/80"></div>

		<section class="p-6">
			<MusicsTable songs={playListSongs} />
		</section>
	</div>
</Layout>
